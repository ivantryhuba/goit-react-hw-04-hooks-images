{"version":3,"sources":["services/imageAPI.js","Components/Searchbar/Searchbar.styles.js","Components/Searchbar/Searchbar.js","Components/Spinner/Spinner.styles.js","Components/Spinner/Spinner.js","Components/ImageGalleryItem/ImageGalleryItem.styles.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.styles.js","Components/ImageGallery/ImageGallery.js","Components/Button/Button.styles.js","Components/Button/Button.js","Components/Modal/Modal.styles.js","Components/Modal/Modal.js","App.styles.js","App.js","index.js"],"names":["getImages","searchQuery","page","axios","get","then","res","data","hits","SearchbarCont","styled","header","SearchForm","form","SearchFormBtn","button","SearchFormBtnLabel","span","SearchFormInput","input","Searchbar","state","handleInputValue","evt","value","currentTarget","setState","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","resetForm","this","type","autoComplete","autoFocus","placeholder","onChange","React","Component","SpinnerStyled","div","Spinner","color","height","width","ImageGalleryItemStyled","li","ImageGalleryStyled","img","ImageGalleryItem","imageUrl","tags","largeImageURL","openModal","src","alt","onClick","ImageGalleryList","ul","ImageGallery","images","map","id","webformatURL","LoadMoreBtn","Button","Overlay","ModalContainer","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","children","backdropClick","createPortal","Container","App","showModal","largeImage","isLoading","error","handleFormSubmit","fetchImages","options","prevState","length","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","info","catch","toggleModal","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0d6457bf.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst getImages = ({ searchQuery, page = 1 }) => {\n    return axios\n        .get(\n            `https://pixabay.com/api/?key=21947643-3ad5511e98ce1ab16d6eede2a&q=${searchQuery}&image_type=photo&page=${page}&per_page=12&orientation=horizontal`,\n        )\n        .then(res => res.data.hits);\n};\n\nexport default getImages;\n","import styled from '@emotion/styled';\n\nexport const SearchbarCont = styled.header`\n    top: 0;\n    left: 0;\n    position: sticky;\n    z-index: 1100;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 64px;\n    padding-right: 24px;\n    padding-left: 24px;\n    padding-top: 12px;\n    padding-bottom: 12px;\n    color: #fff;\n    background-color: #3f51b5;\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n        0px 4px 5px 0px rgba(0, 0, 0, 0.14),\n        0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n`;\n\nexport const SearchFormBtn = styled.button`\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n\n    &:hover {\n        opacity: 1;\n    }\n`;\n\nexport const SearchFormBtnLabel = styled.span`\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n\n    &::placeholder {\n        font: inherit;\n        font-size: 18px;\n    }\n`;\n","import React from 'react';\n\nimport {\n    SearchbarCont,\n    SearchForm,\n    SearchFormBtn,\n    SearchFormBtnLabel,\n    SearchFormInput,\n} from './Searchbar.styles';\n\nexport class Searchbar extends React.Component {\n    state = {\n        searchQuery: '',\n    };\n\n    handleInputValue = evt => {\n        const { value } = evt.currentTarget;\n        this.setState({\n            searchQuery: value.toLowerCase(),\n        });\n    };\n\n    handleSubmit = evt => {\n        evt.preventDefault();\n\n        if (this.state.searchQuery.trim() === '') {\n            return;\n        }\n        this.props.onSubmit(this.state.searchQuery);\n        this.resetForm();\n    };\n\n    resetForm = () => {\n        this.setState({\n            searchQuery: '',\n        });\n    };\n\n    render() {\n        return (\n            <SearchbarCont>\n                <SearchForm onSubmit={this.handleSubmit}>\n                    <SearchFormBtn type=\"submit\">\n                        <SearchFormBtnLabel>Search</SearchFormBtnLabel>\n                    </SearchFormBtn>\n\n                    <SearchFormInput\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search images and photos\"\n                        value={this.state.searchQuery}\n                        onChange={this.handleInputValue}\n                    />\n                </SearchForm>\n            </SearchbarCont>\n        );\n    }\n}\n","import styled from '@emotion/styled';\n\nexport const SpinnerStyled = styled.div`\n    margin-left: auto;\n    margin-right: auto;\n`;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport { SpinnerStyled } from './Spinner.styles';\n\nexport const Spinner = () => {\n    return (\n        <SpinnerStyled>\n            <Loader type=\"Bars\" color=\"#00BFFF\" height={200} width={200} />\n        </SpinnerStyled>\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const ImageGalleryItemStyled = styled.li`\n    border-radius: 2px;\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n        0px 1px 1px 0px rgba(0, 0, 0, 0.14),\n        0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const ImageGalleryStyled = styled.img`\n    width: 100%;\n    height: 260px;\n    object-fit: cover;\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover {\n        transform: scale(1.03);\n        cursor: zoom-in;\n    }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    ImageGalleryItemStyled,\n    ImageGalleryStyled,\n} from './ImageGalleryItem.styles';\n\nexport const ImageGalleryItem = ({\n    imageUrl,\n    tags,\n    largeImageURL,\n    openModal,\n}) => {\n    return (\n        <ImageGalleryItemStyled>\n            <ImageGalleryStyled\n                src={imageUrl}\n                alt={tags}\n                onClick={() => openModal(largeImageURL)}\n            />\n        </ImageGalleryItemStyled>\n    );\n};\n\nImageGalleryItem.propTypes = {\n    imageUrl: PropTypes.string.isRequired,\n    tags: PropTypes.string.isRequired,\n    openModal: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ImageGalleryList = styled.ul`\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n    grid-gap: 16px;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 0;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ImageGalleryItem } from '../ImageGalleryItem/ImageGalleryItem';\n\nimport { ImageGalleryList } from './ImageGallery.styles';\n\nexport const ImageGallery = ({ images, openModal }) => {\n    return (\n        <ImageGalleryList>\n            {images.map(({ id, webformatURL, largeImageURL, tags }) => (\n                <ImageGalleryItem\n                    key={id}\n                    imageUrl={webformatURL}\n                    tags={tags}\n                    largeImageURL={largeImageURL}\n                    openModal={openModal}\n                />\n            ))}\n        </ImageGalleryList>\n    );\n};\n\nImageGallery.propTypes = {\n    images: PropTypes.arrayOf(PropTypes.object).isRequired,\n    openModal: PropTypes.func.isRequired,\n};","import styled from '@emotion/styled';\n\nexport const LoadMoreBtn = styled.button`\n    padding: 8px 16px;\n    border-radius: 2px;\n    background-color: #3f51b5;\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    text-align: center;\n    display: inline-block;\n    color: #fff;\n    border: 0;\n    text-decoration: none;\n    cursor: pointer;\n    font-family: inherit;\n    font-size: 18px;\n    line-height: 24px;\n    font-style: normal;\n    font-weight: 500;\n    min-width: 180px;\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n        0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n    &:hover,\n    &:focus {\n        background-color: #303f9f;\n    }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LoadMoreBtn } from './Button.styles';\n\nexport const Button = ({ onClick }) => {\n    return (\n        <LoadMoreBtn type=\"button\" onClick={onClick}>\n            Load more\n        </LoadMoreBtn>\n    );\n};\n\nButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(0, 0, 0, 0.8);\n    z-index: 1200;\n`;\n\nexport const ModalContainer = styled.div`\n    max-width: calc(100vw - 48px);\n    max-height: calc(100vh - 24px);\n`;\n","import React from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { Overlay, ModalContainer } from './Modal.styles';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport class Modal extends React.Component {\n    componentDidMount() {\n        window.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleKeyDown = evt => {\n        if (evt.code === 'Escape') {\n            this.props.onClose();\n        }\n    };\n\n    handleBackdropClick = evt => {\n        if (evt.currentTarget === evt.target) {\n            this.props.onClose();\n        }\n    };\n\n    render() {\n        const { children } = this.props;\n        const backdropClick = this.handleBackdropClick;\n        return createPortal(\n            <Overlay onClick={backdropClick}>\n                <ModalContainer>{children}</ModalContainer>\n            </Overlay>,\n            modalRoot,\n        );\n    }\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-gap: 16px;\n    padding-bottom: 24px;\n`;\n","import React from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport getImages from './services/imageAPI';\n\nimport { Searchbar } from './Components/Searchbar/Searchbar';\nimport { Spinner } from './Components/Spinner/Spinner';\nimport { ImageGallery } from './Components/ImageGallery/ImageGallery';\nimport { Button } from './Components/Button/Button';\nimport { Modal } from './Components/Modal/Modal';\n\nimport { Container } from './App.styles';\n\nclass App extends React.Component {\n    state = {\n        page: 1,\n        images: [],\n        searchQuery: '',\n        showModal: false,\n        largeImage: '',\n        isLoading: false,\n        error: null,\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.searchQuery !== this.state.searchQuery) {\n            this.fetchImages();\n        }\n\n        if (prevState.page !== this.state.page) {\n            window.scrollTo({\n                top: document.documentElement.scrollHeight,\n                behavior: 'smooth',\n            });\n        }\n    }\n\n    handleFormSubmit = searchQuery => {\n        this.setState({\n            searchQuery: searchQuery.trim(),\n            page: 1,\n            images: [],\n            isLoading: true,\n            error: null,\n        });\n    };\n\n    fetchImages = () => {\n        const { page, searchQuery } = this.state;\n        const options = { searchQuery, page };\n\n        this.setState({\n            isLoading: true,\n        });\n\n        getImages(options)\n            .then(hits => {\n                this.setState(prevState => ({\n                    page: prevState.page + 1,\n                    images: [...prevState.images, ...hits],\n                    isLoading: false,\n                }));\n\n                if (hits.length > 0) {\n                    toast.success('We have a picture for you!', {\n                        position: 'bottom-right',\n                        autoClose: 1000,\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                    });\n                }\n\n                if (hits.length === 0) {\n                    toast.info('Picture is not found', {\n                        position: 'bottom-right',\n                        autoClose: 1000,\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                    });\n                }\n            })\n            .catch(error => {\n                this.setState({\n                    error,\n                });\n\n                toast.error('Error!', {\n                    position: 'bottom-right',\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            });\n    };\n\n    openModal = largeImageURL => {\n        this.setState({\n            showModal: true,\n            largeImage: largeImageURL,\n        });\n    };\n\n    toggleModal = () => {\n        this.setState({\n            largeImage: '',\n            showModal: false,\n        });\n    };\n\n    render() {\n        const { images, showModal, largeImage, isLoading } = this.state;\n\n        return (\n            <Container>\n                <Searchbar onSubmit={this.handleFormSubmit} />\n                <>\n                        {isLoading ===true && <Spinner />}\n                        <>\n                            <ImageGallery\n                                images={images}\n                                openModal={this.openModal}\n                            />\n\n                            {images.length > 0 && (\n                                <Button onClick={this.fetchImages} />\n                            )}\n                        </>\n\n                </>\n\n                {showModal && (\n                    <Modal onClose={this.toggleModal}>\n                        <img src={largeImage} alt=\"\" />\n                    </Modal>\n                )}\n                <ToastContainer />\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}
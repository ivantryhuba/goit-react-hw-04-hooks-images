{"version":3,"sources":["services/imageAPI.js","Components/Searchbar/Searchbar.styles.js","Components/Searchbar/Searchbar.js","Components/Spinner/Spinner.styles.js","Components/Spinner/Spinner.js","Components/ImageGalleryItem/ImageGalleryItem.styles.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.styles.js","Components/ImageGallery/ImageGallery.js","Components/Button/Button.styles.js","Components/Button/Button.js","Components/Modal/Modal.styles.js","Components/Modal/Modal.js","App.styles.js","App.js","index.js"],"names":["getImages","searchQuery","page","axios","get","then","res","data","hits","SearchbarCont","styled","header","SearchForm","form","SearchFormBtn","button","SearchFormBtnLabel","span","SearchFormInput","input","Searchbar","onSubmit","useState","setSearchQuery","resetForm","evt","preventDefault","trim","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","SpinnerStyled","div","Spinner","color","height","width","ImageGalleryItemStyled","li","ImageGalleryStyled","img","ImageGalleryItem","imageUrl","tags","largeImageURL","openModal","src","alt","onClick","ImageGalleryList","ul","ImageGallery","images","map","id","webformatURL","LoadMoreBtn","Button","Overlay","ModalContainer","modalRoot","document","querySelector","Modal","onClose","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","target","Container","App","setPage","setImages","showModal","setShowModal","largeImage","setLargeImage","isLoading","setIsLoading","fetchImages","length","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","info","scrollTo","top","documentElement","scrollHeight","behavior","catch","error","console","log","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d7fadcd8.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst getImages = (searchQuery, page=1 ) => {\n    return axios\n        .get(\n            `https://pixabay.com/api/?key=21947643-3ad5511e98ce1ab16d6eede2a&q=${searchQuery}&image_type=photo&page=${page}&per_page=12&orientation=horizontal`,\n        )\n        .then(res => res.data.hits);\n};\n\nexport default getImages;\n","import styled from '@emotion/styled';\n\nexport const SearchbarCont = styled.header`\n    top: 0;\n    left: 0;\n    position: sticky;\n    z-index: 1100;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 64px;\n    padding-right: 24px;\n    padding-left: 24px;\n    padding-top: 12px;\n    padding-bottom: 12px;\n    color: #fff;\n    background-color: #3f51b5;\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n        0px 4px 5px 0px rgba(0, 0, 0, 0.14),\n        0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n`;\n\nexport const SearchFormBtn = styled.button`\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n\n    &:hover {\n        opacity: 1;\n    }\n`;\n\nexport const SearchFormBtnLabel = styled.span`\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n\n    &::placeholder {\n        font: inherit;\n        font-size: 18px;\n    }\n`;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types'\n\nimport {\n    SearchbarCont,\n    SearchForm,\n    SearchFormBtn,\n    SearchFormBtnLabel,\n    SearchFormInput,\n} from './Searchbar.styles';\n\nexport const Searchbar =({ onSubmit })=> {\n    const [searchQuery, setSearchQuery] = useState('');\n\n   const handleInputValue = evt => {\n        const { value } = evt.currentTarget;\n            setSearchQuery (value.toLowerCase())\n        \n    };\n\n    const handleSubmit = evt => {\n        evt.preventDefault();\n\n        if (searchQuery.trim() === '') {\n            return;\n        }\n        \n        onSubmit(searchQuery);\n        resetForm();\n    };\n\n    const resetForm = () => {\n        setSearchQuery ('')\n    };\n\n        return (\n            <SearchbarCont>\n                <SearchForm onSubmit={handleSubmit}>\n                    <SearchFormBtn type=\"submit\">\n                        <SearchFormBtnLabel>Search</SearchFormBtnLabel>\n                    </SearchFormBtn>\n\n                    <SearchFormInput\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search images and photos\"\n                        value={searchQuery}\n                        onChange={handleInputValue}\n                    />\n                </SearchForm>\n            </SearchbarCont>\n        );\n    \n}\n\nSearchbar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};","import styled from '@emotion/styled';\n\nexport const SpinnerStyled = styled.div`\n    margin-left: auto;\n    margin-right: auto;\n`;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport { SpinnerStyled } from './Spinner.styles';\n\nexport const Spinner = () => {\n    return (\n        <SpinnerStyled>\n            <Loader type=\"Bars\" color=\"#00BFFF\" height={200} width={200} />\n        </SpinnerStyled>\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const ImageGalleryItemStyled = styled.li`\n    border-radius: 2px;\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n        0px 1px 1px 0px rgba(0, 0, 0, 0.14),\n        0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const ImageGalleryStyled = styled.img`\n    width: 100%;\n    height: 260px;\n    object-fit: cover;\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover {\n        transform: scale(1.03);\n        cursor: zoom-in;\n    }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    ImageGalleryItemStyled,\n    ImageGalleryStyled,\n} from './ImageGalleryItem.styles';\n\nexport const ImageGalleryItem = ({\n    imageUrl,\n    tags,\n    largeImageURL,\n    openModal,\n}) => {\n    return (\n        <ImageGalleryItemStyled>\n            <ImageGalleryStyled\n                src={imageUrl}\n                alt={tags}\n                onClick={() => openModal(largeImageURL)}\n            />\n        </ImageGalleryItemStyled>\n    );\n};\n\nImageGalleryItem.propTypes = {\n    imageUrl: PropTypes.string.isRequired,\n    tags: PropTypes.string.isRequired,\n    openModal: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ImageGalleryList = styled.ul`\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n    grid-gap: 16px;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 0;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ImageGalleryItem } from '../ImageGalleryItem/ImageGalleryItem';\n\nimport { ImageGalleryList } from './ImageGallery.styles';\n\nexport const ImageGallery = ({ images, openModal }) => {\n    return (\n        <ImageGalleryList>\n            {images.map(({ id, webformatURL, largeImageURL, tags }) => (\n                <ImageGalleryItem\n                    key={id}\n                    imageUrl={webformatURL}\n                    tags={tags}\n                    largeImageURL={largeImageURL}\n                    openModal={openModal}\n                />\n            ))}\n        </ImageGalleryList>\n    );\n};\n\nImageGallery.propTypes = {\n    images: PropTypes.arrayOf(PropTypes.object).isRequired,\n    openModal: PropTypes.func.isRequired,\n};","import styled from '@emotion/styled';\n\nexport const LoadMoreBtn = styled.button`\n    padding: 8px 16px;\n    border-radius: 2px;\n    background-color: #3f51b5;\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    text-align: center;\n    display: inline-block;\n    color: #fff;\n    border: 0;\n    text-decoration: none;\n    cursor: pointer;\n    font-family: inherit;\n    font-size: 18px;\n    line-height: 24px;\n    font-style: normal;\n    font-weight: 500;\n    min-width: 180px;\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n        0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n    &:hover,\n    &:focus {\n        background-color: #303f9f;\n    }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LoadMoreBtn } from './Button.styles';\n\nexport const Button = ({ onClick }) => {\n    return (\n        <LoadMoreBtn type=\"button\" onClick={onClick}>\n            Load more\n        </LoadMoreBtn>\n    );\n};\n\nButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(0, 0, 0, 0.8);\n    z-index: 1200;\n`;\n\nexport const ModalContainer = styled.div`\n    max-width: calc(100vw - 48px);\n    max-height: calc(100vh - 24px);\n`;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\n\nimport { Overlay, ModalContainer } from './Modal.styles';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ onClose, children }) => {\n    useEffect(() => {\n        window.addEventListener('keydown', handleKeyDown);\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    });\n\n    const handleKeyDown = evt => {\n        if (evt.code === 'Escape') {\n            onClose();\n        }\n    };\n\n    const handleBackdropClick = evt => {\n        if (evt.currentTarget === evt.target) {\n            onClose();\n        }\n    };\n\n    return createPortal(\n        <Overlay onClick={handleBackdropClick}>\n            <ModalContainer>{children}</ModalContainer>\n        </Overlay>,\n        modalRoot,\n    );\n};\n\nModal.propTypes = {\n    onClose: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-gap: 16px;\n    padding-bottom: 24px;\n`;\n","import React, { useState, useEffect } from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport getImages from './services/imageAPI';\n\nimport { Searchbar } from './Components/Searchbar/Searchbar';\nimport { Spinner } from './Components/Spinner/Spinner';\nimport { ImageGallery } from './Components/ImageGallery/ImageGallery';\nimport { Button } from './Components/Button/Button';\nimport { Modal } from './Components/Modal/Modal';\n\nimport { Container } from './App.styles';\n\nconst App = () => {\n    const [page, setPage] = useState(1);\n    const [images, setImages] = useState([]);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [showModal, setShowModal] = useState(false);\n    const [largeImage, setLargeImage] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        if (!searchQuery) {\n            return;\n        }\n        fetchImages();\n    }, [searchQuery]);\n\n    const handleFormSubmit = searchQuery => {\n        setSearchQuery(searchQuery.trim());\n        setPage(1);\n        setImages([]);\n    };\n\n    const fetchImages = () => {\n        setIsLoading(true);\n\n        getImages(searchQuery, page)\n            .then(hits => {\n                setPage(page + 1);\n                setImages([...images, ...hits]);\n                setIsLoading(false);\n\n                if (hits.length > 0) {\n                    toast.success('We have a picture for you!', {\n                        position: 'bottom-right',\n                        autoClose: 1000,\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                    });\n                }\n\n                if (hits.length === 0) {\n                    toast.info('Picture is not found', {\n                        position: 'bottom-right',\n                        autoClose: 1000,\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                    });\n                }\n\n                window.scrollTo({\n                    top: document.documentElement.scrollHeight,\n                    behavior: 'smooth',\n                });\n            })\n            .catch(error => {\n                console.log(error);\n                setIsLoading(false);\n\n                toast.error('Error!', {\n                    position: 'bottom-right',\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            });\n    };\n\n    const openModal = largeImageURL => {\n        setShowModal(true);\n        setLargeImage(largeImageURL);\n    };\n\n    const toggleModal = () => {\n        setShowModal(false);\n        setLargeImage('');\n    };\n\n    return (\n        <Container>\n            <Searchbar onSubmit={handleFormSubmit} />\n\n            {isLoading === true && <Spinner />}\n            <>\n                <ImageGallery images={images} openModal={openModal} />\n\n                {images.length > 0 && <Button onClick={fetchImages} />}\n            </>\n\n            {showModal && (\n                <Modal onClose={toggleModal}>\n                    <img src={largeImage} alt=\"\" />\n                </Modal>\n            )}\n            <ToastContainer />\n        </Container>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}